# -*- coding: utf-8 -*-
"""Market Research & Use Case Generation Agent.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_OCTnBThJgALoADp0BMqOPssIvNczRSb
"""

pip install crewai

from crewai import Agent, Task, Crew
import os
from crewai import LLM

llm = LLM(
    model="gpt-3.5-turbo",
    api_key="",
)
from crewai_tools import SerperDevTool
SERPER_API_KEY = ""
os.environ["SERPER_API_KEY"] = SERPER_API_KEY
search_tool = SerperDevTool(api_key=SERPER_API_KEY)
# Agents
## 1. Industry & Company Research Agent
industry_research_agent = Agent(
    role="Industry & Company Research Agent",
    goal="Research and segment the industry and company, focusing on key offerings, strategic areas, and market standards for {company} in {industry}.",
    verbose=True,
    memory=True,
    backstory=("You are an Industry & Company Research Agent specializing in gathering detailed insights about "
               "{company} in the {industry} sector. Your focus includes understanding market standards, company "
               "offerings, vision, and strategic areas such as operations, supply chain, and customer experience."),
    tools=[search_tool],
    llm=llm,
    allow_delegation=True
)

## 2. Market Standards & Use Case Generation Agent
use_case_generation_agent = Agent(
    role="Market Standards & Use Case Generation Agent",
    goal="Identify AI, ML, and GenAI use cases aligned with industry trends and {company}'s strategic goals in {industry}.",
    verbose=True,
    memory=True,
    backstory=("You are responsible for analyzing market trends and standards in {industry} to create a diverse set of AI, ML,GenAi -driven use cases "
               "that support {company}'s strategic goals, enhancing customer satisfaction, operational efficiency, and "
               "innovative solutions through GenAI and ML technologies."),
    tools=[search_tool],
    llm=llm,
    allow_delegation=True
)
##3. Resource Collection Agent
resource_collection_agent = Agent(
    role="Resource Asset Collection Agent",
    goal="Find relevant datasets and resources for implementing the proposed use cases for {company} in {industry}.",
    verbose=True,
    memory=True,
    backstory=("As a Resource Collection Agent, your job is to locate relevant datasets and resources for AI and ML "
               "applications in {company}'s industry. You search on platforms like Kaggle, HuggingFace, and GitHub "
               "for resources that align with the proposed AI/ML solutions."),
    tools=[search_tool],
    llm=llm,
    allow_delegation=True
)

## 4. Report Generation Agent
report_generation_agent = Agent(
    role="Final Proposal & Report Generation Agent",
    goal="Compile findings into a proposal with industry insights, use cases, and clickable dataset links for {company} in {industry}.",
    verbose=True,
    memory=True,
    backstory=("As the Report Generation Agent, you summarize the key findings from research, use cases, and datasets "
               "into a final proposal. This report will be used to support strategic decision-making and includes "
               "referenced sources and clickable links to resources."),
    tools=[search_tool],
    llm=llm,
    allow_delegation=False
)

#  Tasks
## Industry Research Task
industry_research_task = Task(
    description="Conduct industry research for {company} in {industry} to gather insights into market standards, strategic areas, and key offerings.",
    expected_output="A detailed report with industry segmentation, market standards, competitor analysis, and company focus areas.",
    agent=industry_research_agent
)

## Use Case Generation Task
use_case_generation_task = Task(
    description="Analyze industry standards to generate relevant AI, ML, and GenAI use cases for {company} in {industry}.",
    expected_output="A diverse set of AI and ML use cases addressing strategic needs such as customer satisfaction, operations, and efficiency improvements.The use cases should include the application, benefits under each of them. ",
    agent=use_case_generation_agent
)

## Resource Collection Task
resource_collection_task = Task(
    description="Find datasets on platforms like Kaggle, HuggingFace, and GitHub for the proposed AI/ML use cases for {company}.",
    expected_output="A list of relevant datasets with titles, descriptions, and clickable links to access the resources.",
    agent=resource_collection_agent
)

##  Report Writing Task
report_generation_task = Task(
    description="Compile the research findings, use cases, and dataset links into a A well-written report in markdown format for {company} in {industry}.",
    expected_output="A structured report with industry insights, proposed use cases(application, benefits), dataset links, and references to support decision-making.",
    agent=report_generation_agent,
)

# Set up Crew
crew = Crew(
    agents=[industry_research_agent, use_case_generation_agent, resource_collection_agent, report_generation_agent],
    tasks=[industry_research_task, use_case_generation_task, resource_collection_task, report_generation_task],
    verbose=True
)

# Kick off the crew
result = crew.kickoff(inputs={"company": "Tata", "industry": "Steel"})

from IPython.display import Markdown
Markdown(result.raw)

